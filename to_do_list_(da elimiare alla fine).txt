0 - Nel reprocessing controllare se "AntonÃ­n DvorÃ¡k (1841â1904)" va bene diventi [anton, n, dvor, k, 1841, 1904]

1 - Implementare lo SPIMI  https://nlp.stanford.edu/IR-book/html/htmledition/single-pass-in-memory-indexing-1.html
    1.1 - Salvare file diversi per docid e per le frequenze, controllare se 8 bytes per entrambi (sono entrambi long?)
    1.2 - Cercare di capire la divisioni in blocchi e SkipBlock
    1.3 - Gestione memoria, capire come funziona
2 - Controllare se bisogna usare FileChannel per leggere da disco
3 - Nel merge TermInfo.writeToFile utilizza la variabile BYTES_DOCID_LENGHT settata a 4 bytes, mentre nella funzione
    writeInverdedIndexToFile si allocano 8 bytes per il docId.

----------------------- SCHEMA STRUTTURA ---------------------------

Files disco PER OGNI BLOCCO della collezione:
- Lessico: termini in ordine lessicografico +
           offset ai relativi DocIds (ogni docId nell'inverted index occupa 8 byte) +
           offset Tfs della posting list (ogni frequenza nell'inverted index occupa 4 byte) +
           lunghezza posting list
           ----------------------------------------
           esempio. 2 termini con posting lists:
           000 29:2, 30:2
           01 96:1, 92:1, 93:1, 95:1

           Nel lessico:
           Term: 000
           OffsetDocId: 0
           OffsetFrequency: 0
           PostingListLength: 2
           --------------------------------
           Term: 01
           OffsetDocId: 16     (calcolata byteDocID * n.PostingListLenght = 8 * 2)
           OffsetFrequency: 8  (calcolata byteFreq * n.PostingListLenght = 4 * 2)
           PostingListLength: 4

- Inverted Index DocIds: docIds (in ordine?) e compressi
- Inverted Index Tfs: term frequencies
           esempio Inverted Index:
           DocId: 29 - Frequency: 2
           DocId: 30 - Frequency: 2
           DocId: 96 - Frequency: 1
           DocId: 92 - Frequency: 1
           DocId: 93 - Frequency: 1
           DocId: 95 - Frequency: 1

Files disco CONDIVISI:
- Document Index
- Statistics o Skip Info


27/10 siamo arrivati a riga 54 dell'invertedIndexBuilder per vedere cosa inserire nel LexiconEntry
e avevamo il dubbio di capire dove va/quando va incrementato il valore di postingListLength per indicare quanti
posting abbiamo nella postingList relativa al termine